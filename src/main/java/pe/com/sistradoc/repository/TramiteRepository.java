package pe.com.sistradoc.repository;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import pe.com.sistradoc.model.Tramite;
import pe.com.sistradoc.model.TramiteQueryByDeriver;
import pe.com.sistradoc.model.TramiteQueryResumen;
import pe.com.sistradoc.model.TramiteCode;

@Repository
public interface TramiteRepository extends JpaRepository<Tramite, Long> {
	
	Tramite findByCodigoTramite(String codigoTramite);
	
	@Query(value = "SELECT IF(MAX(T.TXT_CODI_TRAM) IS NOT NULL, "
			+ "          CAST(substr(MAX(T.TXT_CODI_TRAM), 9) AS UNSIGNED) + 1, "
			+ "          '1') AS 'codigoTramite' "
			+ "  FROM tb_tram_padr T "
			+ " WHERE substr(T.TXT_CODI_TRAM, 3,6) = date_format(SYSDATE(), \"%y%m%d\") "
		    , nativeQuery = true)
	TramiteCode getCodeTramite();
	
	
	@Query(value = "SELECT t.TXT_CODI_TRAM as 'codigoTramite',  \r\n"
			     + "       DATE_FORMAT(T.FEC_INGR_TRAM,'%d/%m/%Y') AS 'fechaIngreso', \r\n"
			     + "       concat(tt.IDX_TIPO_TRAM , '. ', tt.TXT_NOMB_TRAM) AS 'tipoTramite',  \r\n"
			     + "       t.TXT_ASUN_TRAM AS 'asunto',  \r\n"
			     + "       IF(S.TXT_TIPO_SOLI='PERSONA', UPPER(concat(S.TXT_TIPO_DOCU, '. ', s.TXT_NUME_DOCU, ' - ', s.TXT_NOMB_SOLI, ' ', TXT_APEX_PATE, ' ', TXT_APEX_MATE)),  \r\n"
			     + "                                     UPPER(concat(S.TXT_TIPO_DOCU, '. ', s.TXT_NUME_DOCU, ' - ', s.TXT_NOMB_SOLI)) ) AS 'solicitante',  \r\n"
			     + "       d.TXT_NOMB_DEPE AS 'dependenciaActual',  \r\n"
			     + "       (SELECT D.TXT_NOMB_DEPE \r\n"
			     + "          FROM tb_depe_enti d  \r\n"
			     + "         INNER JOIN tb_fluj_tram_depe F \r\n"
		 	     + "            ON D.IDX_DEPE_ENTI=F.FK0_DEPE_ENTI_IDX  \r\n"
			     + "           AND F.NUM_ORDE_FLUJ=tm.NUM_PASO_ACTU + 1  \r\n"
			     + "         INNER JOIN tb_tipo_tram TT \r\n"
			     + "                 ON TT.IDX_TIPO_TRAM=F.FK1_TIPO_TRAM_IDX \r\n"
			     + "                AND TT.IDX_TIPO_TRAM=t.FK0_TIPO_TRAM_IDX  \r\n"
			     + "         LIMIT 1) AS 'dependenciaDestino' \r\n"
			     + "  FROM tb_tram_padr t  \r\n"
			     + " INNER JOIN tb_tram_padr_movi tm on t.TXT_CODI_TRAM=tm.FK1_TRAM_IDX_TRAM \r\n"
			     + " INNER JOIN tb_soli_tram s  on t.FK1_SOLI_NUME_DOCU=s.TXT_NUME_DOCU \r\n"
			     + " INNER JOIN tb_depe_enti d  on tm.FK0_DEPE_ENTI_IDX=d.IDX_DEPE_ENTI \r\n"
			     + " INNER JOIN tb_tipo_tram tt on t.FK0_TIPO_TRAM_IDX=tt.IDX_TIPO_TRAM \r\n"
			     + " WHERE TM.TXT_UBIC_ACTU='1'  \r\n"
			     + "   AND T.TXT_ESTA_TRAM='EN TRAMITE' \r\n"
			     + "   AND TM.NUM_PASO_ACTU < (SELECT MAX(F.NUM_ORDE_FLUJ) \r\n"
			     + "                             FROM tb_fluj_tram_depe f \r\n"
			     + "                            WHERE f.FK1_TIPO_TRAM_IDX = tt.IDX_TIPO_TRAM) \r\n"
			     + " ORDER BY T.FEC_INGR_TRAM ASC, TT.IDX_TIPO_TRAM ASC  "
		    , nativeQuery = true)
	List<TramiteQueryByDeriver> getListTramiteDerivar();
	
	
	@Query(value = "SELECT t.TXT_CODI_TRAM as 'codigoTramite',  \r\n"
			     + "       TM.NUM_PASO_ACTU, \r\n"
			     + "       DATE_FORMAT(T.FEC_INGR_TRAM,'%d/%m/%Y') AS 'fechaIngreso', \r\n"
			     + "       concat(tt.IDX_TIPO_TRAM , '. ', tt.TXT_NOMB_TRAM) AS 'tipoTramite',  \r\n"
			     + "       t.TXT_ASUN_TRAM AS 'asunto',  \r\n"
			     + "       IF(S.TXT_TIPO_SOLI='PERSONA', UPPER(concat(S.TXT_TIPO_DOCU, '. ', s.TXT_NUME_DOCU, ' - ', s.TXT_NOMB_SOLI, ' ', TXT_APEX_PATE, ' ', TXT_APEX_MATE)),  \r\n"
			     + "                                     UPPER(concat(S.TXT_TIPO_DOCU, '. ', s.TXT_NUME_DOCU, ' - ', s.TXT_NOMB_SOLI)) ) AS 'solicitante',  \r\n"
			     + "       d.TXT_NOMB_DEPE AS 'dependenciaActual',  \r\n"
			     + "       (SELECT D.TXT_NOMB_DEPE \r\n"
			     + "          FROM tb_depe_enti d  \r\n"
			     + "	     INNER JOIN tb_tram_padr_movi tm2 \r\n"
			     + "                 ON D.IDX_DEPE_ENTI=tm2.FK0_DEPE_ENTI_IDX  \r\n"
			     + "				AND tm2.NUM_PASO_ACTU=tm.NUM_PASO_ACTU - 1  \r\n"
			     + "	     LIMIT 1) AS 'dependenciaDestino' \r\n"
			     + "  FROM tb_tram_padr t  \r\n"
			     + " INNER JOIN tb_tram_padr_movi tm on t.TXT_CODI_TRAM=tm.FK1_TRAM_IDX_TRAM \r\n"
			     + " INNER JOIN tb_soli_tram s  on t.FK1_SOLI_NUME_DOCU=s.TXT_NUME_DOCU \r\n"
			     + " INNER JOIN tb_depe_enti d  on tm.FK0_DEPE_ENTI_IDX=d.IDX_DEPE_ENTI \r\n"
			     + " INNER JOIN tb_tipo_tram tt on t.FK0_TIPO_TRAM_IDX=tt.IDX_TIPO_TRAM \r\n"
			     + " WHERE TM.TXT_UBIC_ACTU='1'  \r\n"
			     + "   AND T.TXT_ESTA_TRAM='EN TRAMITE' \r\n"
			     + "   AND TM.NUM_PASO_ACTU >= 1 \r\n"
			     + " ORDER BY T.FEC_INGR_TRAM ASC, TT.IDX_TIPO_TRAM ASC  "
			, nativeQuery = true)
	List<TramiteQueryByDeriver> getListTramiteDevolver();

	
	@Query(value = "SELECT t.TXT_CODI_TRAM as 'codigoTramite',  \r\n"
			     + "       DATE_FORMAT(T.FEC_INGR_TRAM,'%d/%m/%Y') AS 'fechaIngreso', \r\n"
			     + "       concat(tt.IDX_TIPO_TRAM , '. ', tt.TXT_NOMB_TRAM) AS 'tipoTramite',  \r\n"
			     + "       t.TXT_ASUN_TRAM AS 'asunto',  \r\n"
			     + "       IF(S.TXT_TIPO_SOLI='PERSONA', UPPER(concat(S.TXT_TIPO_DOCU, '. ', s.TXT_NUME_DOCU, ' - ', s.TXT_NOMB_SOLI, ' ', TXT_APEX_PATE, ' ', TXT_APEX_MATE)),  \r\n"
			     + "                                     UPPER(concat(S.TXT_TIPO_DOCU, '. ', s.TXT_NUME_DOCU, ' - ', s.TXT_NOMB_SOLI)) ) AS 'solicitante',  \r\n"
			     + "       d.TXT_NOMB_DEPE AS 'dependenciaActual' \r\n"
			     + "  FROM tb_tram_padr t  \r\n"
			     + " INNER JOIN tb_tram_padr_movi tm on t.TXT_CODI_TRAM=tm.FK1_TRAM_IDX_TRAM \r\n"
			     + " INNER JOIN tb_soli_tram s  on t.FK1_SOLI_NUME_DOCU=s.TXT_NUME_DOCU \r\n"
			     + " INNER JOIN tb_depe_enti d  on tm.FK0_DEPE_ENTI_IDX=d.IDX_DEPE_ENTI \r\n"
			     + " INNER JOIN tb_tipo_tram tt on t.FK0_TIPO_TRAM_IDX=tt.IDX_TIPO_TRAM \r\n"
			     + " WHERE TM.TXT_UBIC_ACTU='1'  \r\n"
			     + "   AND T.TXT_ESTA_TRAM='EN TRAMITE' \r\n"
			     + "   AND TM.NUM_PASO_ACTU = (SELECT MAX(F.NUM_ORDE_FLUJ) \r\n"
			     + "                             FROM tb_fluj_tram_depe f \r\n"
			     + "                            WHERE f.FK1_TIPO_TRAM_IDX = tt.IDX_TIPO_TRAM) \r\n"
			     + " ORDER BY T.FEC_INGR_TRAM ASC, TT.IDX_TIPO_TRAM ASC  "
		     , nativeQuery = true)
	List<TramiteQueryByDeriver> getListTramiteFinished();

	
	@Query(value = 
			  "select \"Tramites TUPA - Por Derivar\" as 'tipoTramite', \r\n"
			  + "       a.TXT_NOMB_AREA as 'area', \r\n"
			  + "       d.TXT_NOMB_DEPE as 'dependenciaActual', \r\n"
			  + "       COUNT(t.TXT_CODI_TRAM) as 'cantidadTramites' \r\n"
			  + "  from tb_tram_padr t \r\n"
			  + " inner join tb_tram_padr_movi tm on t.TXT_CODI_TRAM=tm.FK1_TRAM_IDX_TRAM \r\n"
			  + " inner join tb_soli_tram s on t.FK1_SOLI_NUME_DOCU=s.TXT_NUME_DOCU \r\n"
			  + " inner join tb_depe_enti d on tm.FK0_DEPE_ENTI_IDX=d.IDX_DEPE_ENTI \r\n"
			  + " inner join tb_tipo_tram tt on t.FK0_TIPO_TRAM_IDX=tt.IDX_TIPO_TRAM \r\n"
			  + " inner join tb_area_enti a on a.IDX_AREA_ENTI=d.FK0_AREA_IDEX \r\n"
			  + " where T.TXT_ESTA_TRAM='EN TRAMITE' \r\n"
			  + "   and TM.TXT_UBIC_ACTU='1' \r\n"
			  + "   and TM.NUM_PASO_ACTU < \r\n"
			  + "       (select MAX(F.NUM_ORDE_FLUJ) \r\n"
			  + "          from tb_fluj_tram_depe f \r\n"
			  + "         where f.FK1_TIPO_TRAM_IDX = tt.IDX_TIPO_TRAM) \r\n"
			  + "   and fnGetRequestTime(tm.FEC_DERI_MOVI, sysdate()) > if( \r\n"
			  + "                                                           (select ftd.NUM_DURA_DIAS \r\n"
			  + "                                                              from tb_fluj_tram_depe ftd \r\n"
			  + "                                                             where ftd.FK1_TIPO_TRAM_IDX = tt.IDX_TIPO_TRAM \r\n"
			  + "                                                               and tm.FK0_DEPE_ENTI_IDX=ftd.FK0_DEPE_ENTI_IDX \r\n"
			  + "                                                               and ftd.num_orde_fluj=tm.NUM_PASO_ACTU) is null, 1, \r\n"
			  + "                                                           (select f.NUM_DURA_DIAS \r\n"
			  + "                                                              from tb_fluj_tram_depe f \r\n"
			  + "                                                             where f.FK1_TIPO_TRAM_IDX = tt.IDX_TIPO_TRAM \r\n"
			  + "                                                               and tm.FK0_DEPE_ENTI_IDX=f.FK0_DEPE_ENTI_IDX \r\n"
			  + "                                                               and f.num_orde_fluj=tm.NUM_PASO_ACTU)) \r\n"
			  + " group by a.TXT_NOMB_AREA, \r\n"
			  + "          d.TXT_NOMB_DEPE \r\n"
			  + " union all \r\n"
			  + "select \"Tramites TUPA Por Finalizar\" as 'tipoTramite', \r\n"
			  + "       a.TXT_NOMB_AREA as 'area', \r\n"
			  + "       d.TXT_NOMB_DEPE as 'dependenciaActual', \r\n"
			  + "       COUNT(t.TXT_CODI_TRAM) as 'cantidadTramites' \r\n"
			  + "  from tb_tram_padr t \r\n"
			  + " inner join tb_tram_padr_movi tm on t.TXT_CODI_TRAM=tm.FK1_TRAM_IDX_TRAM \r\n"
			  + " inner join tb_soli_tram s on t.FK1_SOLI_NUME_DOCU=s.TXT_NUME_DOCU \r\n"
			  + " inner join tb_depe_enti d on tm.FK0_DEPE_ENTI_IDX=d.IDX_DEPE_ENTI \r\n"
			  + " inner join tb_tipo_tram tt on t.FK0_TIPO_TRAM_IDX=tt.IDX_TIPO_TRAM \r\n"
			  + " inner join tb_area_enti a on a.IDX_AREA_ENTI=d.FK0_AREA_IDEX \r\n"
			  + " where T.TXT_ESTA_TRAM='EN TRAMITE' \r\n"
			  + "   and TM.TXT_UBIC_ACTU='1' \r\n"
			  + "   and TM.NUM_PASO_ACTU = \r\n"
			  + "       (select MAX(F.NUM_ORDE_FLUJ) \r\n"
			  + "          from tb_fluj_tram_depe f \r\n"
			  + "         where f.FK1_TIPO_TRAM_IDX = tt.IDX_TIPO_TRAM) \r\n"
			  + "   and fnGetRequestTime(tm.FEC_DERI_MOVI, sysdate()) > if( \r\n"
			  + "                                                           (select ftd.NUM_DURA_DIAS \r\n"
			  + "                                                              from tb_fluj_tram_depe ftd \r\n"
			  + "                                                             where ftd.FK1_TIPO_TRAM_IDX = tt.IDX_TIPO_TRAM \r\n"
			  + "                                                               and tm.FK0_DEPE_ENTI_IDX=ftd.FK0_DEPE_ENTI_IDX \r\n"
			  + "                                                               and ftd.num_orde_fluj=tm.NUM_PASO_ACTU) is null, 1, \r\n"
			  + "                                                           (select f.NUM_DURA_DIAS \r\n"
			  + "                                                              from tb_fluj_tram_depe f \r\n"
			  + "                                                             where f.FK1_TIPO_TRAM_IDX = tt.IDX_TIPO_TRAM \r\n"
			  + "                                                               and tm.FK0_DEPE_ENTI_IDX=f.FK0_DEPE_ENTI_IDX \r\n"
			  + "                                                               and f.num_orde_fluj=tm.NUM_PASO_ACTU)) \r\n"
			  + "group by a.TXT_NOMB_AREA, \r\n"
			  + "         d.TXT_NOMB_DEPE \r\n"
			  + " union all \r\n"
			  + "select \"Tramites NO TUPA\" as 'tipoTramite', \r\n"
			  + "       a.TXT_NOMB_AREA as 'area', \r\n"
			  + "       d.TXT_NOMB_DEPE as 'dependenciaActual', \r\n"
			  + "       COUNT(t.TXT_CODI_TRAM) as 'cantidadTramites' \r\n"
			  + "  from tb_tram_padr t \r\n"
			  + " inner join tb_tram_padr_movi tm on t.TXT_CODI_TRAM=tm.FK1_TRAM_IDX_TRAM \r\n"
			  + " inner join tb_soli_tram s on t.FK1_SOLI_NUME_DOCU=s.TXT_NUME_DOCU \r\n"
			  + " inner join tb_depe_enti d on tm.FK0_DEPE_ENTI_IDX=d.IDX_DEPE_ENTI \r\n"
			  + " inner join tb_tipo_tram tt on t.FK0_TIPO_TRAM_IDX=tt.IDX_TIPO_TRAM \r\n"
			  + " inner join tb_area_enti a on a.IDX_AREA_ENTI=d.FK0_AREA_IDEX \r\n"
			  + " where T.TXT_ESTA_TRAM='EN TRAMITE' \r\n"
			  + "   and TM.TXT_UBIC_ACTU='1' \r\n"
			  + "   and T.FK0_TIPO_TRAM_IDX=1 \r\n"
			  + " group by a.TXT_NOMB_AREA, \r\n"
			  + "          d.TXT_NOMB_DEPE "
	     , nativeQuery = true)
	List<TramiteQueryResumen> getListTramiteDeriverResumen();
	
	
//	@Query(value = "SELECT d.TXT_NOMB_DEPE AS 'dependenciaActual' , \r\n"
//			+ "       COUNT(t.TXT_CODI_TRAM) as 'cantidadTramites' \r\n"
//			+ "  FROM tb_tram_padr t  \r\n"
//			+ " INNER JOIN tb_tram_padr_movi tm on t.TXT_CODI_TRAM=tm.FK1_TRAM_IDX_TRAM \r\n"
//			+ " INNER JOIN tb_soli_tram s  on t.FK1_SOLI_NUME_DOCU=s.TXT_NUME_DOCU \r\n"
//			+ " INNER JOIN tb_depe_enti d  on tm.FK0_DEPE_ENTI_IDX=d.IDX_DEPE_ENTI \r\n"
//			+ " INNER JOIN tb_tipo_tram tt on t.FK0_TIPO_TRAM_IDX=tt.IDX_TIPO_TRAM \r\n"
//			+ " WHERE T.TXT_ESTA_TRAM='EN TRAMITE'  \r\n"
//			+ "   AND TM.TXT_UBIC_ACTU='1' \r\n"
//			+ "   AND TM.NUM_PASO_ACTU >= (SELECT MAX(F.NUM_ORDE_FLUJ) \r\n"
//			+ "                             FROM tb_fluj_tram_depe f \r\n"
//			+ "                            WHERE f.FK1_TIPO_TRAM_IDX = tt.IDX_TIPO_TRAM)\r\n"
//			+ "   AND fnGetRequestTime(tm.FEC_DERI_MOVI, sysdate()) >= if(\r\n"
//			+ "                                                           (SELECT ftd.NUM_DURA_DIAS\r\n"
//			+ "                                                              FROM tb_fluj_tram_depe ftd \r\n"
//			+ "														     WHERE ftd.FK1_TIPO_TRAM_IDX = tt.IDX_TIPO_TRAM \r\n"
//			+ "                                                               AND tm.FK0_DEPE_ENTI_IDX=ftd.FK0_DEPE_ENTI_IDX \r\n"
//			+ "                                                               AND ftd.num_orde_fluj=tm.NUM_PASO_ACTU\r\n"
//			+ "                                                           ) IS NULL, \r\n"
//			+ "                                                           1, \r\n"
//			+ "                                                           (SELECT f.NUM_DURA_DIAS\r\n"
//			+ "                                                              FROM tb_fluj_tram_depe f \r\n"
//			+ "                                                             WHERE f.FK1_TIPO_TRAM_IDX = tt.IDX_TIPO_TRAM \r\n"
//			+ "                                                               AND tm.FK0_DEPE_ENTI_IDX=f.FK0_DEPE_ENTI_IDX\r\n"
//			+ "                                                               AND f.num_orde_fluj=tm.NUM_PASO_ACTU\r\n"
//			+ "                                                           ) \r\n"
//			+ "                                                          )\r\n"
//			+ "GROUP BY d.TXT_NOMB_DEPE\r\n"
//			+ "ORDER BY COUNT(t.TXT_CODI_TRAM) desc   "
//     , nativeQuery = true)
//	List<TramiteQueryResumen> getListTramiteFinishedResumen();
	
}
